name: .NET

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  dotnet-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --output ./build
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Deploy to DigitalOcean Kubernetes
      run: ls -la ./build
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./build
        file: ./SettingX.Repositories.AzureTableStorage/Dockerfile/Dockerfile
        push: true
        tags: settingx/azure_table_storage:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  kubernetes-deploy:
    needs: [dotnet-build]
    runs-on: ubuntu-latest
    steps:

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-settingx

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f ./Kubernetes-Yamls/Dev/deployment.yaml

    - name: Verify deployment
      run: kubectl rollout status deployment/azure-table-storage

